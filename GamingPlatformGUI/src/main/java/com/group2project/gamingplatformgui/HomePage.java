/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.group2project.gamingplatformgui;

import oldClasses.UserSession;

import java.util.List;
import java.util.Map;

/**
 *
 * @author Jeremy
 */
public class HomePage extends javax.swing.JFrame {
    private SQLConnection conn = SQLConnection.getInstance();
//    Integer userID;

    /**
     * Creates new form HomePage
     */
    public HomePage() {
        initComponents();
        updateUserName();
        populateOwnedGamesList();
    }
//    public HomePage(String userName) {
//        this.userID = Integer.parseInt(conn.getPlayerIdByUsername(userName));  //Replace with userID
//        initComponents();
//        setUsernameText(userID);
//        updateUserName();
//        populateOwnedGamesList();
//    }
//    public HomePage(Integer userID) {
//        this.userID = userID;  //Replace with userID
//        initComponents();
//        setUsernameText(userID);
//        updateUserName();
//        populateOwnedGamesList();
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    private void updateUserName() {
        String username = UserSession.getInstance().getUsername(); // Retrieve the username from the session
        if (username != null && !username.isEmpty()) {
            userNameLabel.setText(username); // Set the username on the label
        } else {
            userNameLabel.setText("Guest"); // Default text or handling for not logged-in users
        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GamesButton = new javax.swing.JButton();
        ReviewsButton = new javax.swing.JButton();
        pageTitle = new javax.swing.JLabel();
        ReportsButton = new javax.swing.JButton();
        userNameLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        OwnedGamesList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        GamesButton.setText("Game Shop");
        GamesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GamesButtonActionPerformed(evt);
            }
        });

        ReviewsButton.setText("Reviews");
        ReviewsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReviewsButtonActionPerformed(evt);
            }
        });

        pageTitle.setText("Home Page");

        ReportsButton.setText("Reports");
        ReportsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReportsButtonActionPerformed(evt);
            }
        });

        userNameLabel.setText("UserName");

        OwnedGamesList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(OwnedGamesList);

        jLabel1.setText("Library");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pageTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(userNameLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ReportsButton)
                                    .addComponent(ReviewsButton)
                                    .addComponent(GamesButton))))
                        .addGap(0, 29, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNameLabel)
                    .addComponent(pageTitle))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(GamesButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ReviewsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ReportsButton)
                        .addGap(101, 101, 101))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GamesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GamesButtonActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                dispose();  // Dispose of the page
                new GamesPage().setVisible(true);
            }
        });
    }//GEN-LAST:event_GamesButtonActionPerformed

    private void ReportsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReportsButtonActionPerformed
             java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                dispose();  // Dispose of the page
                new ReportsPage().setVisible(true);
            }
        });
    }//GEN-LAST:event_ReportsButtonActionPerformed

    private void ReviewsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReviewsButtonActionPerformed
               java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                dispose();  // Dispose of the page
                new ReviewsPage().setVisible(true);
            }
        });
    }//GEN-LAST:event_ReviewsButtonActionPerformed
   
    private void populateOwnedGamesList() {
    int userId = Integer.parseInt(UserSession.getInstance().getUserId());
    List<String> ownedGames = SQLConnection.getInstance().getOwnedGamesTitles(userId);
    Map<Integer, Boolean> installationStatus = SQLConnection.getInstance().getInstallationStatusForUser(userId);

    OwnedGamesList.setModel(new javax.swing.AbstractListModel<String>() {
        String[] strings = ownedGames.stream()
                                     .map(game -> {
                                         int gameId = SQLConnection.getInstance().getGameIdByTitle(game);
                                         boolean isInstalled = installationStatus.getOrDefault(gameId, false);
                                         return game + (isInstalled ? " (Installed)" : " (Not Installed)");
                                     })
                                     .toArray(String[]::new);

        public int getSize() {
            return strings.length;
        }

        public String getElementAt(int i) {
            return strings[i];
        }
    });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton GamesButton;
    private javax.swing.JList<String> OwnedGamesList;
    private javax.swing.JButton ReportsButton;
    private javax.swing.JButton ReviewsButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel pageTitle;
    private javax.swing.JLabel userNameLabel;
    // End of variables declaration//GEN-END:variables
}
