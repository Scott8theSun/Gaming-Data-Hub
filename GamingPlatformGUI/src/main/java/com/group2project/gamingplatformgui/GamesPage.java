/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package com.group2project.gamingplatformgui;

import oldClasses.UserSession;

import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Jeremy
 */
public class GamesPage extends javax.swing.JFrame {
    private SQLConnection conn = SQLConnection.getInstance();

    /** Creates new form GamesPage */
    public GamesPage() {
        initComponents();
        updateUserName();
        populateGamesList();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gameScrollPane = new javax.swing.JScrollPane();
        gameList = new javax.swing.JList<>();
        pageTitleLabel = new javax.swing.JLabel();
        buyButton = new javax.swing.JButton();
        gameIDLabel = new javax.swing.JLabel();
        developerIDLabel = new javax.swing.JLabel();
        genreLabel = new javax.swing.JLabel();
        gameTitleLabel = new javax.swing.JLabel();
        releaseDateLabel = new javax.swing.JLabel();
        ratingLabel = new javax.swing.JLabel();
        gameIDTextField = new javax.swing.JTextField();
        gameTitleTextField = new javax.swing.JTextField();
        developerIDTextField = new javax.swing.JTextField();
        releaseDateTextField = new javax.swing.JTextField();
        genreTextField = new javax.swing.JTextField();
        ratingTextField = new javax.swing.JTextField();
        backButton = new javax.swing.JButton();
        userNameLabel = new javax.swing.JLabel();
        InstallButton = new javax.swing.JButton();
        UninstallButton = new javax.swing.JButton();
        Refund = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        gameList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        gameScrollPane.setViewportView(gameList);

        pageTitleLabel.setText("Games");

        buyButton.setText("Buy");
        buyButton.setActionCommand("buy");
        buyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyButtonActionPerformed(evt);
            }
        });

        gameIDLabel.setText("GameID");

        developerIDLabel.setText("DeveloperID");

        genreLabel.setText("Genre");

        gameTitleLabel.setText("Title");

        releaseDateLabel.setText("Release Date");

        ratingLabel.setText("Rating");

        gameIDTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        gameIDTextField.setText("   ");
        gameIDTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        gameIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameIDTextFieldActionPerformed(evt);
            }
        });

        gameTitleTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        gameTitleTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameTitleTextFieldActionPerformed(evt);
            }
        });

        developerIDTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        developerIDTextField.setText("   ");
        developerIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                developerIDTextFieldActionPerformed(evt);
            }
        });

        releaseDateTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        releaseDateTextField.setText("   ");
        releaseDateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                releaseDateTextFieldActionPerformed(evt);
            }
        });

        genreTextField.setText("   ");

        ratingTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ratingTextField.setText("   ");
        ratingTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ratingTextFieldActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        userNameLabel.setText("UserName");

        InstallButton.setText("Install");
        InstallButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InstallButtonActionPerformed(evt);
            }
        });

        UninstallButton.setText("Uninstall");
        UninstallButton.setActionCommand("UninstallButton");
        UninstallButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UninstallButton(evt);
            }
        });

        Refund.setText("Refund");
        Refund.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefundActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(gameScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buyButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Refund)))
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(InstallButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UninstallButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(genreLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ratingLabel))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(genreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(101, 101, 101)
                                .addComponent(ratingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(gameIDLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(gameTitleLabel))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(developerIDLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(releaseDateLabel))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(gameIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(39, 39, 39)
                                    .addComponent(gameTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(developerIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(releaseDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addComponent(pageTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(userNameLabel)
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pageTitleLabel)
                    .addComponent(userNameLabel))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(gameScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(backButton)
                            .addComponent(buyButton)
                            .addComponent(InstallButton)
                            .addComponent(UninstallButton)
                            .addComponent(Refund)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gameIDLabel)
                            .addComponent(gameTitleLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gameIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gameTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(developerIDLabel)
                            .addComponent(releaseDateLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(developerIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(releaseDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(genreLabel)
                            .addComponent(ratingLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(genreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ratingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void updateUserName() {
        String username = UserSession.getInstance().getUsername(); // Retrieve the username from the session
        if (username != null && !username.isEmpty()) {
            userNameLabel.setText(username); // Set the username on the label
        } else {
            userNameLabel.setText("Guest"); // Default text or handling for not logged-in users
        }
    }
    
    private void buyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyButtonActionPerformed
        String selected = gameList.getSelectedValue();
    if (selected != null) {
        int gameId = Integer.parseInt(selected.split(" - ")[0]);
        int userId = Integer.parseInt(UserSession.getInstance().getUserId());

        if (SQLConnection.getInstance().purchaseGame(userId, gameId)) {
            JOptionPane.showMessageDialog(this, "Purchase successful!", "Success", JOptionPane.INFORMATION_MESSAGE);
            // Update button states post-purchase
            buyButton.setEnabled(false);  // Disable buy button since the game is now owned
            Refund.setEnabled(true); // Enable refund button as they just bought the game
            InstallButton.setEnabled(true);  // Enable install button because the game can now be installed
            UninstallButton.setEnabled(false);  // Disable uninstall button since the game is not yet installed

        } else {
            JOptionPane.showMessageDialog(this, "Purchase failed. You may already own this game or an error occurred.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_buyButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                dispose();  // Dispose of the login page
                new HomePage().setVisible(true);
            }
        });
    }//GEN-LAST:event_backButtonActionPerformed

    private void gameIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameIDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gameIDTextFieldActionPerformed

    private void gameTitleTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameTitleTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gameTitleTextFieldActionPerformed

    private void releaseDateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_releaseDateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_releaseDateTextFieldActionPerformed

    private void developerIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_developerIDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_developerIDTextFieldActionPerformed

    private void ratingTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ratingTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ratingTextFieldActionPerformed

    private void InstallButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InstallButtonActionPerformed
        String selected = gameList.getSelectedValue();
    if (selected != null) {
        int gameId = Integer.parseInt(selected.split(" - ")[0]);
        int userId = Integer.parseInt(UserSession.getInstance().getUserId());
        if (SQLConnection.getInstance().installGame(userId, gameId)) {
            JOptionPane.showMessageDialog(this, "Game installed successfully!", "Installation", JOptionPane.INFORMATION_MESSAGE);
            InstallButton.setEnabled(false);
            UninstallButton.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(this, "Failed to install game.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_InstallButtonActionPerformed

    private void UninstallButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UninstallButton
        String selected = gameList.getSelectedValue();
    if (selected != null) {
        int gameId = Integer.parseInt(selected.split(" - ")[0]);
        int userId = Integer.parseInt(UserSession.getInstance().getUserId());
        if (SQLConnection.getInstance().uninstallGame(userId, gameId)) {
            JOptionPane.showMessageDialog(this, "Game uninstalled successfully!", "Uninstallation", JOptionPane.INFORMATION_MESSAGE);
            InstallButton.setEnabled(true);
            UninstallButton.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(this, "Failed to uninstall game.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_UninstallButton

    private void RefundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefundActionPerformed
        String selected = gameList.getSelectedValue();
    if (selected != null) {
        int gameId = Integer.parseInt(selected.split(" - ")[0]);
        int userId = Integer.parseInt(UserSession.getInstance().getUserId());
        if (conn.refundGame(userId, gameId)) {
            JOptionPane.showMessageDialog(this, "Refund successful!", "Refund", JOptionPane.INFORMATION_MESSAGE);
            // Update UI accordingly
            buyButton.setEnabled(true);
            InstallButton.setEnabled(false);
            UninstallButton.setEnabled(false);
            Refund.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(this, "Refund failed. Game may not be eligible for refund or an error occurred.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_RefundActionPerformed

    private void populateGamesList() {
    List<String> games = SQLConnection.getInstance().getAllGames();
    gameList.setModel(new javax.swing.AbstractListModel<String>() {
        String[] strings = games.toArray(new String[0]);
        public int getSize() { return strings.length; }
        public String getElementAt(int i) { return strings[i]; }
    });

    gameList.addListSelectionListener(new ListSelectionListener() {
        public void valueChanged(ListSelectionEvent evt) {
            gameSelected(evt);
        }
    });
}

private void gameSelected(ListSelectionEvent evt) {
    if (!evt.getValueIsAdjusting()) {
        String selected = gameList.getSelectedValue();
        if (selected != null) {
            int gameId = Integer.parseInt(selected.split(" - ")[0]);
            int userId = Integer.parseInt(UserSession.getInstance().getUserId());
            Set<Integer> ownedGames = SQLConnection.getInstance().getOwnedGames(userId);
            Map<String, Boolean> installationStatus = SQLConnection.getInstance().getInstallationStatus(userId, gameId);

            boolean isOwned = ownedGames.contains(gameId);
            boolean isInstalled = installationStatus.getOrDefault("IsInstalled", false);

            // Always update game details whether or not the game is owned.
            updateGameDetails(gameId);

            // Enable or disable buttons based on ownership and installation status
            buyButton.setEnabled(!isOwned);
            InstallButton.setEnabled(isOwned && !isInstalled);
            UninstallButton.setEnabled(isOwned && isInstalled);
            
            // Check if the game is refundable in addition to being owned
            boolean isRefundable = isOwned && SQLConnection.getInstance().isRefundable(userId, gameId);
            Refund.setEnabled(isRefundable);

        } else {
            clearGameDetails();  // Clear details if no game is selected
        }
    }
}

                                                                                        


private void clearGameDetails() {
    gameIDTextField.setText("");
    gameTitleTextField.setText("");
    developerIDTextField.setText("");
    genreTextField.setText("");
    ratingTextField.setText("");
    releaseDateTextField.setText("");
    InstallButton.setEnabled(false);
    UninstallButton.setEnabled(false);
}


private void updateGameDetails(int gameId) {
    Map<String, Object> details = SQLConnection.getInstance().getGameDetails(gameId);
    if (!details.isEmpty()) {
        gameIDTextField.setText(details.get("GameID").toString());
        gameTitleTextField.setText(details.get("Title").toString());
        developerIDTextField.setText(details.get("DeveloperID").toString());
        genreTextField.setText(details.get("Genre").toString());
        ratingTextField.setText(details.get("Rating").toString());
        releaseDateTextField.setText(details.get("ReleaseDate").toString());
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton InstallButton;
    private javax.swing.JButton Refund;
    private javax.swing.JButton UninstallButton;
    private javax.swing.JButton backButton;
    private javax.swing.JButton buyButton;
    private javax.swing.JLabel developerIDLabel;
    private javax.swing.JTextField developerIDTextField;
    private javax.swing.JLabel gameIDLabel;
    private javax.swing.JTextField gameIDTextField;
    private javax.swing.JList<String> gameList;
    private javax.swing.JScrollPane gameScrollPane;
    private javax.swing.JLabel gameTitleLabel;
    private javax.swing.JTextField gameTitleTextField;
    private javax.swing.JLabel genreLabel;
    private javax.swing.JTextField genreTextField;
    private javax.swing.JLabel pageTitleLabel;
    private javax.swing.JLabel ratingLabel;
    private javax.swing.JTextField ratingTextField;
    private javax.swing.JLabel releaseDateLabel;
    private javax.swing.JTextField releaseDateTextField;
    private javax.swing.JLabel userNameLabel;
    // End of variables declaration//GEN-END:variables

}
